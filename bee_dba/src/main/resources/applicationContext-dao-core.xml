<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder location="classpath:jdbc.properties" />
    <bean id="dataSource_db_bee_dba" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.db_bee_dba.url}" />
        <property name="username" value="${jdbc.db_bee_dba.username}" />
        <property name="password" value="${jdbc.db_bee_dba.password}" />

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="${druid.db_bee_dba.initialSize}" />
        <property name="minIdle" value="${druid.db_bee_dba.minIdle}" />
        <property name="maxActive" value="${druid.db_bee_dba.maxActive}" />

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${druid.db_bee_dba.maxWait}" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${druid.db_bee_dba.timeBetweenEvictionRunsMillis}" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${druid.db_bee_dba.minEvictableIdleTimeMillis}" />

        <property name="validationQuery" value="${druid.db_bee_dba.validationQuery}" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />

        <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
        <property name="filters" value="stat" />
    </bean>

    <bean id="pagination" class="com.bee.mybatis.v3_2.PaginationInterceptorEnhance">
        <property name="properties">
            <props>
                <prop key="dialect">mysql</prop>
                <prop key="pageSqlId">.*page.*</prop>
            </props>
        </property>
    </bean>

    <!-- - - - - - - - sessionFactory - - - - - - - -->
    <bean id="sqlSessionFactory_db_bee_dba" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource_db_bee_dba" />
        <property name="mapperLocations" value="classpath*:com/bee/dba/**/entity/mapper/**/*Mapper.xml"/>
        <!--<property name="mapperLocations" value="classpath*:com/demo/dba/entity/mapper/*Mapper.xml"/>-->

        <!--所有的mapper 可以单独加上-->
        <property name="plugins" ref="pagination"/>
    </bean>

    <!-- - - - - - - DAO - - - - - - - -->
    <bean id="beeUserDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="sqlSessionFactory" ref="sqlSessionFactory_db_bee_dba"/>
        <property name="mapperInterface" value="com.bee.dba.dao.IBeeUserDao"/>
    </bean>
    <bean id="beeRoleDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="sqlSessionFactory" ref="sqlSessionFactory_db_bee_dba"/>
        <property name="mapperInterface" value="com.bee.dba.dao.IBeeRoleDao"/>
    </bean>
    <bean id="beeMenuDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="sqlSessionFactory" ref="sqlSessionFactory_db_bee_dba"/>
        <property name="mapperInterface" value="com.bee.dba.dao.IBeeMenuDao"/>
    </bean>
    <bean id="beeUserRoleDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="sqlSessionFactory" ref="sqlSessionFactory_db_bee_dba"/>
        <property name="mapperInterface" value="com.bee.dba.dao.IBeeUserRoleDao"/>
    </bean>
    <bean id="beeRightDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="sqlSessionFactory" ref="sqlSessionFactory_db_bee_dba"/>
        <property name="mapperInterface" value="com.bee.dba.dao.IBeeRightDao"/>
    </bean>
    <bean id="beeServiceAreaDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="sqlSessionFactory" ref="sqlSessionFactory_db_bee_dba"/>
        <property name="mapperInterface" value="com.bee.dba.dao.IBeeServiceAreaDao"/>
    </bean>
    <bean id="beeProductDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="sqlSessionFactory" ref="sqlSessionFactory_db_bee_dba"/>
        <property name="mapperInterface" value="com.bee.dba.dao.IBeeProductDao"/>
    </bean>

    <!--<bean id="beeRoleDao" class="org.mybatis.spring.mapper.MapperFactoryBean">-->
        <!--<property name="sqlSessionFactory" ref="sqlSessionFactory_db_bee_dba"/>-->
        <!--<property name="mapperInterface" value="com.bee.dba.dao.IBeeUserDao"/>-->
    <!--</bean>-->

</beans>
